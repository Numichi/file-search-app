openapi: 3.0.1

servers:
  - url: 'http://localhost:8081/'
    description: Instance 1
  - url: 'http://localhost:8082/'
    description: Instance 2

info:
  title: FileSearchEngine API
  version: 0.1.0

tags:
  - name: Search v1
    description: Base of search endpoints
  - name: History v1
    description: Base of history endpoints

paths:
  /api/v1/unique:
    get:
      summary: Get all the unique file names from specific path to end.
      operationId: getUnique
      tags:
        - Search v1
      parameters:
        - in: query
          name: folder
          schema:
            type: string
          required: true
          description: The absolute path to the folder where the search will start.
          example: /home/user/documents
        - in: query
          name: ext
          schema:
            type: string
          required: true
          description: Filter files by extension (e.g., txt, jpg).
          example: /home/user/documents
        - in: query
          name: warn
          schema:
            type: boolean
            default: true
          required: false
          description: TODO
          example: true
      responses:
        '200':
          description: Login response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    $ref: '#/components/schemas/ResultFileNames'
                  errors:
                    type: array
                    items:
                      type: string
                      example: Warning message
        '400':
          $ref: '#/components/responses/Error400MessageResponse'
        '403':
          $ref: '#/components/responses/Error403MessageResponse'
        '500':
          $ref: '#/components/responses/Error500MessageResponse'

  /api/v1/history:
    get:
      summary: Get all the history of searched file names.
      operationId: getHistory
      tags:
        - History v1
      responses:
        '200':
          description: History response
          content:
            application/json:
              schema:
                type: object
                properties:
                  histories:
                    type: array
                    items:
                      $ref: '#/components/schemas/HistoryItem'
        '400':
          $ref: '#/components/responses/Error400MessageResponse'
        '500':
          $ref: '#/components/responses/Error500MessageResponse'

components:
  responses:
    Error400MessageResponse:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessageResponse'
    Error401MessageResponse:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessageResponse'
    Error403MessageResponse:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessageResponse'
    Error500MessageResponse:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessageResponse'

  schemas:
    ErrorMessageResponse:
      type: object
      required:
        - status
        - errors
      properties:
        status:
          type: integer
        errors:
          type: array
          items:
            type: string
            example: Detailed error message
    ResultFileNames:
      type: array
      items:
        type: string
        example: example.txt
    HistoryItem:
      type: object
      properties:
        user:
          type: string
          example: linuxuser1
        timestamp:
          type: string
          format: date-time
          example: '2023-10-05T14:48:00.000Z'
        ext:
          type: string
          example: txt
        results:
          $ref: '#/components/schemas/ResultFileNames'